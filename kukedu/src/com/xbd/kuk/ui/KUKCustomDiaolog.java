package com.xbd.kuk.ui;import java.security.spec.MGF1ParameterSpec;import com.xbd.kuk.R;import android.app.Dialog;import android.content.Context;import android.content.DialogInterface;import android.graphics.drawable.Drawable;import android.os.Bundle;import android.text.Html;import android.text.Spanned;import android.text.SpannedString;import android.view.View;import android.view.ViewGroup;import android.view.Window;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.ImageView;import android.widget.ListView;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.RadioGroup.OnCheckedChangeListener;import android.widget.TextView;/** *  * @ClassName: OBCustomDiaolog * @Description: TODO * @author zhangchunzhe * @date 2013-4-7 上午10:37:12 *  */public class KUKCustomDiaolog extends Dialog implements DialogInterface,		OnItemClickListener {	private View mView;	private TextView mTitleView, mMessageView;	private ImageView mIconView;	private Button mCancalBtn, mOKBtn, mOtherBtn;	private ListView mItemList;	private RadioGroup mRadioGroup;	private Context mContext;	private DialogSingleAdapter mDialogSingleAdapter;	private OnItemClickListener mOnItemClickListener;	private boolean isShowItem;	public KUKCustomDiaolog(Context context, boolean cancelable,			OnCancelListener cancelListener) {		super(context, cancelable, cancelListener);		// TODO Auto-generated constructor stub		initDialog(context);	}	public KUKCustomDiaolog(Context context, int theme) {		super(context, theme);		// TODO Auto-generated constructor stub		initDialog(context);	}	public KUKCustomDiaolog(Context context) {		super(context);		// TODO Auto-generated constructor stub		initDialog(context);	}	private void initDialog(Context context) {		mContext = context;		mView = getLayoutInflater().inflate(R.layout.dialog_view, null);		mTitleView = (TextView) mView.findViewById(R.id.titleMessage);		mIconView = (ImageView) mView.findViewById(R.id.icon);		mMessageView = (TextView) mView.findViewById(R.id.messageText);		mItemList = (ListView) mView.findViewById(R.id.itemList);		mCancalBtn = (Button) mView.findViewById(R.id.cancalBtn);		mOKBtn = (Button) mView.findViewById(R.id.OKBtn);		mOtherBtn = (Button) mView.findViewById(R.id.otherBtn);		mItemList.setOnItemClickListener(this);	}	@Override	protected void onCreate(Bundle savedInstanceState) {		// TODO Auto-generated method stub		requestWindowFeature(Window.FEATURE_NO_TITLE);		getWindow().setBackgroundDrawableResource(				R.drawable.ob_course_notice_adjunct_dialog_transparent);		super.onCreate(savedInstanceState);		setContentView(mView);	}	/**	 * 	 * @param str	 */	public void setTitle(String str) {		mTitleView.setText(str);	}	/**	 * 	 * @param drawable	 */	public void setIcon(Drawable drawable) {		mIconView.setImageDrawable(drawable);	}	/**	 * 	 * @param drawable	 */	public void setIcon(int drawableId) {		mIconView.setImageDrawable(getContext().getResources().getDrawable(				drawableId));	}	/**	 * 	 * @param str	 */	public void setMessage(String str) {		mMessageView.setText(str);	}	/**	 * 	 * @param str	 */	public void setHtmlMessage(String str) {		// Spanned spanned = Html.fromHtml(str);		mMessageView.setText(str);	}		public void setTextSize(int size) {		mMessageView.setTextSize(size);	}	/**	 * 	 * @param str	 */	public void setSingleChoiceItem(String[] str, int select,			OnItemClickListener onItemClickListener) {		mDialogSingleAdapter = new DialogSingleAdapter(str, mContext, select);		mItemList.setVisibility(View.VISIBLE);		mMessageView.setVisibility(View.GONE);		mItemList.setAdapter(mDialogSingleAdapter);		mOnItemClickListener = onItemClickListener;	}	/**	 * 	 * @param str	 */	public void setSingleChoiceItem(String[] str, int select,			OnItemClickListener onItemClickListener, boolean isShow) {		isShowItem = isShow;		mDialogSingleAdapter = new DialogSingleAdapter(str, mContext, select,				isShow);		mItemList.setVisibility(View.VISIBLE);		mMessageView.setVisibility(View.GONE);		mItemList.setAdapter(mDialogSingleAdapter);		mOnItemClickListener = onItemClickListener;	}	/**	 * 	 * @param str	 */	public int getSingleChoiceItem() {		int id = mRadioGroup.getCheckedRadioButtonId();		for (int i = 0; i < mRadioGroup.getChildCount(); i++) {			if (id == mRadioGroup.getChildAt(i).getId()) {				return i;			}		}		return -1;	}	/**	 * 	 * @param str	 * @param listener	 */	public void setOKBtn(String str,			final DialogInterface.OnClickListener listener) {		mOKBtn.setText(str);		mOKBtn.setVisibility(View.VISIBLE);		mOKBtn.setOnClickListener(new View.OnClickListener() {			@Override			public void onClick(View v) {				// TODO Auto-generated method stub				listener.onClick(KUKCustomDiaolog.this,						DialogInterface.BUTTON_POSITIVE);			}		});	}	/**	 * 	 * @param str	 * @param listener	 */	public void setCancalBtn(String str,			final DialogInterface.OnClickListener listener) {		mCancalBtn.setText(str);		mCancalBtn.setVisibility(View.VISIBLE);		mCancalBtn.setOnClickListener(new View.OnClickListener() {			@Override			public void onClick(View v) {				// TODO Auto-generated method stub				cancel();				listener.onClick(KUKCustomDiaolog.this,						DialogInterface.BUTTON_NEGATIVE);			}		});	}	/**	 * 	 * @param str	 * @param listener	 */	public void setOtherBtn(String str,			final DialogInterface.OnClickListener listener) {		mOtherBtn.setText(str);		mOtherBtn.setVisibility(View.VISIBLE);		mOtherBtn.setOnClickListener(new View.OnClickListener() {			@Override			public void onClick(View v) {				// TODO Auto-generated method stub				listener.onClick(KUKCustomDiaolog.this,						DialogInterface.BUTTON_NEUTRAL);			}		});	}	/**	 * 	 * @ClassName: DialogSingleAdapter	 * @Description: TODO	 * @author zhangchunzhe	 * @date 2013-9-25 下午2:21:55	 * 	 */	private class DialogSingleAdapter extends BaseAdapter {		private String[] mStr;		private Context mContext;		private boolean[] mSelected;		private boolean mIsShow;		public DialogSingleAdapter(String[] str, Context context, int select) {			// TODO Auto-generated constructor stub			mContext = context;			mStr = str;			mSelected = new boolean[mStr.length];			mIsShow = true;			setSelectedItem(select);		}		public DialogSingleAdapter(String[] str, Context context, int select,				boolean isShow) {			// TODO Auto-generated constructor stub			mContext = context;			mStr = str;			mSelected = new boolean[mStr.length];			mIsShow = isShow;			setSelectedItem(select);		}		/**		 * 		 * @param select		 */		public void setSelectedItem(int select) {			for (int i = 0; i < mSelected.length; i++) {				if (i == select) {					mSelected[i] = true;				} else {					mSelected[i] = false;				}			}		}		@Override		public int getCount() {			// TODO Auto-generated method stub			return mStr.length;		}		@Override		public Object getItem(int position) {			// TODO Auto-generated method stub			return mStr[position];		}		@Override		public long getItemId(int position) {			// TODO Auto-generated method stub			return position;		}		@Override		public View getView(int position, View convertView, ViewGroup parent) {			// TODO Auto-generated method stub			if (convertView == null) {				convertView = getLayoutInflater().inflate(						R.layout.radio_layout, null);			}			String str = mStr[position];			boolean isSelected = mSelected[position];			RadioButton button = (RadioButton) convertView					.findViewById(R.id.RadioBtn);			if (mIsShow) {				button.setVisibility(View.VISIBLE);				button.setChecked(isSelected);			} else {				button.setVisibility(View.INVISIBLE);			}			TextView textView = (TextView) convertView					.findViewById(R.id.RadioText);			textView.setText(str);			return convertView;		}	}	@Override	public void onItemClick(AdapterView<?> parent, View view, int position,			long id) {		// TODO Auto-generated method stub		mDialogSingleAdapter.setSelectedItem(position);		mDialogSingleAdapter.notifyDataSetChanged();		if (!isShowItem)			cancel();		mOnItemClickListener.onItemClick(parent, view, position, id);	}}