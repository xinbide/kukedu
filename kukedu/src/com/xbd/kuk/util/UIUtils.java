package com.xbd.kuk.util;import java.lang.reflect.Array;import java.text.SimpleDateFormat;import com.xbd.kuk.R;import com.xbd.kuk.ui.KUKCustomDiaolog;import com.xbd.kuk.ui.KUKCustomDownloadDiaolog;import android.app.AlertDialog;import android.app.Dialog;import android.content.Context;import android.content.DialogInterface;import android.content.DialogInterface.OnCancelListener;import android.content.res.TypedArray;import android.graphics.drawable.Drawable;import android.text.Spanned;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.widget.AdapterView.OnItemClickListener;import android.widget.RadioGroup.OnCheckedChangeListener;import android.widget.TextView;import android.widget.Toast;/** *  * @ClassName: UIUtils * @Description: UI 工具类 * @author zhangchunzhe * @date 2013-3-12 上午9:59:21 *  */public class UIUtils {	private static UIUtils mUiUtils;	private static final int TOAST_DURATION = 2000;	public static UIUtils getInstance() {		if (mUiUtils == null) {			mUiUtils = new UIUtils();		}		return mUiUtils;	}	private Dialog mDialog;	private KUKCustomDiaolog mCustomDiaolog;	private KUKCustomDownloadDiaolog mDownloadDiaolog;	/**	 * 显示登陆加载弹出框	 * 	 * @param context	 * @param text	 */	public void showNetLoadDialog(Context context, String text) {		mDialog = new AlertDialog.Builder(context).create();		View v = LayoutInflater.from(context).inflate(				R.layout.net_loading_progress, null);		TextView textView = (TextView) v.findViewById(R.id.netLoadProgressText);		textView.setText(text);		mDialog.show();		mDialog.setContentView(v);	}	/**	 * 保存试卷对话框	 * 	 * @param context	 * @param text	 */	public void showSaveHomeworkDialog(Context context, String text,			DialogInterface.OnClickListener click) {		mCustomDiaolog = new KUKCustomDiaolog(context);		mCustomDiaolog.setTitle(KUKUtil.getString(context,				R.string.alertdialog_title));		mCustomDiaolog.setIcon(R.drawable.img_dialog_warn_icon);		mCustomDiaolog.setMessage(text);		mCustomDiaolog.setCancalBtn(				KUKUtil.getString(context, R.string.alertdialog_cancel), click);		mCustomDiaolog.setOKBtn(				KUKUtil.getString(context, R.string.alertdialog_ok), click);		mCustomDiaolog.show();	}	/**	 * 用户禁言对话框	 * 	 * @param context	 * @param text	 */	public void showUserErrorDialog(Context context, String text,			DialogInterface.OnClickListener click) {		mCustomDiaolog = new KUKCustomDiaolog(context);		mCustomDiaolog.setTitle(KUKUtil.getString(context,				R.string.alertdialog_title));		mCustomDiaolog.setIcon(R.drawable.img_dialog_warn_icon);		mCustomDiaolog.setMessage(text);		mCustomDiaolog.setOKBtn(				KUKUtil.getString(context, R.string.alertdialog_ok), click);		mCustomDiaolog.show();	}	DialogInterface.OnClickListener errorMessage = new DialogInterface.OnClickListener() {		@Override		public void onClick(DialogInterface dialog, int which) {			// TODO Auto-generated method stub			if (which == DialogInterface.BUTTON_POSITIVE) {				dialog.dismiss();			}		}	};	/**	 * 切换用户对话框	 * 	 * @param context	 * @param text	 */	public void showSwitchUserDialog(Context context, String text,			DialogInterface.OnClickListener click) {		mCustomDiaolog = new KUKCustomDiaolog(context);		mCustomDiaolog.setTitle(KUKUtil.getString(context,				R.string.alertdialog_title));		mCustomDiaolog.setIcon(KUKUtil.getDrawable(context,				R.drawable.img_dialog_warn_icon));		mCustomDiaolog.setMessage(text);		mCustomDiaolog.setCancalBtn(				KUKUtil.getString(context, R.string.alertdialog_cancel), click);		mCustomDiaolog.setOKBtn(				KUKUtil.getString(context, R.string.alertdialog_ok), click);		mCustomDiaolog.show();	}	/**	 * 用户确认对话框	 * 	 * @param context	 * @param text	 *            提示信息	 * @click 确认执行的回调	 */	public void showConfirmDialog(Context context, String text,			DialogInterface.OnClickListener click) {		mCustomDiaolog = new KUKCustomDiaolog(context);		mCustomDiaolog.setTitle(KUKUtil.getString(context,				R.string.alertdialog_title));		mCustomDiaolog.setIcon(KUKUtil.getDrawable(context,				R.drawable.img_dialog_warn_icon));		mCustomDiaolog.setMessage(text);		mCustomDiaolog.setCancalBtn(				KUKUtil.getString(context, R.string.alertdialog_cancel), click);		mCustomDiaolog.setOKBtn(				KUKUtil.getString(context, R.string.alertdialog_ok), click);		mCustomDiaolog.show();	}	/**	 * 	 * @param context	 * @param text	 * @param click	 */	public void showOKDialog(Context context, String text,			DialogInterface.OnClickListener click) {		mCustomDiaolog = new KUKCustomDiaolog(context);		mCustomDiaolog.setTitle(KUKUtil.getString(context,				R.string.alertdialog_title));		mCustomDiaolog.setIcon(KUKUtil.getDrawable(context,				R.drawable.img_dialog_warn_icon));		mCustomDiaolog.setMessage(text);		mCustomDiaolog.setOKBtn(				KUKUtil.getString(context, R.string.alertdialog_ok), click);		mCustomDiaolog.show();	}	/**	 * 	 * @param context	 * @param text	 * @param click	 */	public void showNoCancelDialog(Context context, String text,			DialogInterface.OnClickListener click) {		mCustomDiaolog = new KUKCustomDiaolog(context);		mCustomDiaolog.setTitle(KUKUtil.getString(context,				R.string.alertdialog_title));		mCustomDiaolog.setIcon(KUKUtil.getDrawable(context,				R.drawable.img_dialog_warn_icon));		mCustomDiaolog.setMessage(text);		mCustomDiaolog.setCancelable(false);		mCustomDiaolog.setCanceledOnTouchOutside(false);		mCustomDiaolog.setOKBtn(				KUKUtil.getString(context, R.string.alertdialog_ok), click);		mCustomDiaolog.show();	}	/**	 * 显示选择内容的对话框	 * 	 * @param context	 * @param String	 *            []	 * @param select	 * @param onItemClickListener	 * @param isShow	 */	public void showSelectItemDialog(Context context, String[] str, int select,			OnItemClickListener onItemClickListener, boolean isShow) {		mCustomDiaolog = new KUKCustomDiaolog(context);		mCustomDiaolog.setTitle(KUKUtil.getString(context,				R.string.alertdialog_title));		mCustomDiaolog.setIcon(KUKUtil.getDrawable(context,				R.drawable.img_dialog_warn_icon));		mCustomDiaolog.setSingleChoiceItem(str, select, onItemClickListener,				isShow);		mCustomDiaolog.show();	}	/**	 * 网络异常对话框	 * 	 * @param context	 * @param text	 */	public void showNetworkExceptionDialog(Context context, String text,			DialogInterface.OnClickListener click) {		mCustomDiaolog = new KUKCustomDiaolog(context);		mCustomDiaolog.setTitle(KUKUtil.getString(context,				R.string.alertdialog_title));		mCustomDiaolog.setIcon(KUKUtil.getDrawable(context,				R.drawable.img_dialog_warn_icon));		mCustomDiaolog.setMessage(text);		// dialog.setCancalBtn(		// KUKUtil.getString(context, R.string.alertdialog_cancel), click);		mCustomDiaolog.setOKBtn(				KUKUtil.getString(context, R.string.alertdialog_ok), click);		mCustomDiaolog.setOtherBtn(				KUKUtil.getString(context, R.string.alertdialog_network_detail),				click);		mCustomDiaolog.show();	}	/**	 * 网络异常对话框	 * 	 * @param context	 * @param text	 */	public void showExitAppDialog(Context context, String text,			DialogInterface.OnClickListener click) {		mCustomDiaolog = new KUKCustomDiaolog(context);		mCustomDiaolog.setTitle(KUKUtil.getString(context,				R.string.alertdialog_title));		mCustomDiaolog.setIcon(KUKUtil.getDrawable(context,				R.drawable.img_dialog_warn_icon));		mCustomDiaolog.setMessage(text);		mCustomDiaolog.setCancalBtn(				KUKUtil.getString(context, R.string.alertdialog_cancel), click);		mCustomDiaolog.setOKBtn(				KUKUtil.getString(context, R.string.alertdialog_ok), click);		mCustomDiaolog.show();	}	/**	 * 	 * @param context	 * @param text	 * @param message	 * @param click	 */	public void showVersionUpdateDialog(Context context, String text,			String message, DialogInterface.OnClickListener click) {		cancelDiaolog();		mCustomDiaolog = new KUKCustomDiaolog(context);		mCustomDiaolog.setTitle(text);		mCustomDiaolog.setIcon(KUKUtil.getDrawable(context,				R.drawable.img_dialog_warn_icon));		mCustomDiaolog.setHtmlMessage(message);		mCustomDiaolog.setTextSize(14);		mCustomDiaolog.setCancalBtn(KUKUtil.getString(context,				R.string.version_update_alertdialog_cacel), click);		mCustomDiaolog.setOKBtn(KUKUtil.getString(context,				R.string.version_update_alertdialog_ok), click);		mCustomDiaolog.show();	}	/**	 * 	 * @param context	 * @param text	 * @param str	 * @param click	 */	public void showSingleChoiceDialog(Context context, String text,			String[] str, int checkIndex, OnItemClickListener itemClick,			android.content.DialogInterface.OnClickListener click) {		mCustomDiaolog = new KUKCustomDiaolog(context);		mCustomDiaolog.setTitle(text);		mCustomDiaolog.setIcon(KUKUtil.getDrawable(context,				R.drawable.img_dialog_warn_icon));		mCustomDiaolog.setSingleChoiceItem(str, checkIndex, itemClick);		mCustomDiaolog.setCancalBtn(				KUKUtil.getString(context, R.string.alertdialog_cancel), click);		mCustomDiaolog.show();	}	/**	 * 	 * @return	 */	public void cancelDiaolog() {		if (mCustomDiaolog != null) {			if (mCustomDiaolog.isShowing()) {				mCustomDiaolog.cancel();			}		}		mCustomDiaolog = null;	}	/**	 * 	 * 	 * @param context	 * @param text	 */	public void showDownloadDialog(Context context) {		mDownloadDiaolog = new KUKCustomDownloadDiaolog(context);		mDownloadDiaolog.show();	}	/**	 * 	 * @param radian	 */	public void updateDwonloadDialog(float radian) {		if (mDownloadDiaolog != null) {			mDownloadDiaolog.updateProgress(radian);		}	}	public void setDownloadDialogCancalListener(OnCancelListener listener) {		if (mDownloadDiaolog != null) {			mDownloadDiaolog.setOnCancelListener(listener);		}	}	/**	 * 	 */	public void cancelDwonloadDialog() {		if (mDownloadDiaolog != null) {			mDownloadDiaolog.dismiss();			mDownloadDiaolog = null;		}	}	/**	 * 取消加载进度条	 */	public void cancelNetLoadDialog() {		if (mDialog != null) {			mDialog.cancel();			mDialog = null;		}	}	/**	 * 	 * @param context	 * @param id	 */	public void showToast(Context context, int id) {		showToast(context, KUKUtil.getString(context, id));	}	/**	 * 	 * @param context	 * @param id	 */	public void showToast(Context context, String str) {		Toast toast = new Toast(context);		View view = LayoutInflater.from(context).inflate(				R.layout.toast_textview, null);		TextView textView = (TextView) view.findViewById(R.id.toastText);		textView.setText(str);		toast.setView(view);		toast.setDuration(TOAST_DURATION);		toast.show();	}}